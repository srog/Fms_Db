/*
Deployment script for Fms

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Fms"
:setvar DefaultFilePrefix "Fms"
:setvar DefaultDataPath "D:\Programs\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "D:\Programs\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


IF NOT EXISTS (SELECT * FROM [Division]) 
BEGIN
	INSERT INTO [Division] ([Id], [Name]) VALUES (1, 'Premier League')
	INSERT INTO [Division] ([Id], [Name]) VALUES (2, 'Championship')
	INSERT INTO [Division] ([Id], [Name]) VALUES (3, 'League One')
	INSERT INTO [Division] ([Id], [Name]) VALUES (4, 'League Two')
END

IF NOT EXISTS (SELECT * FROM [Team]) 
BEGIN
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Wrexham', 1)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Liverpool', 1)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Man City', 1)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Man Utd', 1)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Aston Villa', 2)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Norwich City', 2)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Sheffield Utd', 2)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Leeds Utd', 2)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Shrewsbury Town', 3)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Oldham Athletic', 3)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Bristol City', 3)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Huddersfield Town', 3)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Leyton Orient', 4)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Plymouth Argyle', 4)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Chester', 4)
	INSERT INTO [Team] ([Name], [Division]) VALUES ('Accrington Stanley', 4)
END
GO

GO
PRINT N'Starting rebuilding table [dbo].[Player]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Player] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (250) NOT NULL,
    [Age]      INT            NOT NULL,
    [Position] INT            NOT NULL,
    [Rating]   INT            NULL,
    [TeamId]   INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Player])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Player] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Player] ([Id], [Name], [Age], [Position], [Rating])
        SELECT   [Id],
                 [Name],
                 [Age],
                 [Position],
                 [Rating]
        FROM     [dbo].[Player]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Player] OFF;
    END

DROP TABLE [dbo].[Player];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Player]', N'Player';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Team]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Team] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (250) NOT NULL,
    [Division] INT            NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Team])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Team] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Team] ([Id], [Name], [Division])
        SELECT   [Id],
                 [Name],
                 [Division]
        FROM     [dbo].[Team]
        ORDER BY [Id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Team] OFF;
    END

DROP TABLE [dbo].[Team];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Team]', N'Team';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Altering [dbo].[sp_GetAllPlayers]...';


GO
ALTER PROCEDURE [dbo].[sp_GetAllPlayers]
AS
	SELECT * FROM [Player]
RETURN 0
GO
PRINT N'Creating [dbo].[sp_GetDivisionById]...';


GO
CREATE PROCEDURE [dbo].[sp_GetDivisionById]
	@id int
AS
	SELECT * FROM [Division] WHERE [Id] = @id
RETURN 0
GO
PRINT N'Creating [dbo].[sp_GetPlayerById]...';


GO
CREATE PROCEDURE [dbo].[sp_GetPlayerById]
	@id int = 0
AS
	SELECT * FROM [Player] WHERE [Id] = @id
RETURN 0
GO
PRINT N'Creating [dbo].[sp_InsertPlayer]...';


GO
CREATE PROCEDURE [dbo].[sp_InsertPlayer]
	@name nvarchar(250),
	@rating int,
	@age int,
	@position int,
	@teamId int
AS
	INSERT INTO [Player] ([Name], [Age], [Rating], [Position], [TeamId])
	VALUES (@name, @age, @rating, @position, @teamId)
RETURN 0
GO
PRINT N'Creating [dbo].[sp_UpdatePlayer]...';


GO
CREATE PROCEDURE [dbo].[sp_UpdatePlayer]
	@id int = 0,
	@name nvarchar(250),
	@rating int,
	@age int,
	@position int,
	@teamId int
AS
	UPDATE [Player]
	SET [Name] = @name,
		[Rating] = @rating,
		[Age] = @age,
		[Position] = @position,
		[TeamId] = @teamId
		WHERE [Id] = @id
RETURN 0
GO
PRINT N'Refreshing [dbo].[sp_GetAllTeams]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[sp_GetAllTeams]';


GO
PRINT N'Update complete.';


GO
