/*
Deployment script for Fms

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Fms"
:setvar DefaultFilePrefix "Fms"
:setvar DefaultDataPath "C:\Users\s.rogers\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\s.rogers\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
 Pre-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be executed before the build script.	
 Use SQLCMD syntax to include a file in the pre-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the pre-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
--:r .\SeedData\TearDown.sql
--:r .\SeedData\Divisions.sql
--:r .\SeedData\Teams.sql
GO

GO
PRINT N'Creating [dbo].[spGetSeasonById]...';


GO
CREATE PROCEDURE [dbo].[spGetSeasonById]
	@id int
AS
	SELECT * FROM [Season] WHERE [Id] = @id
RETURN 0
GO
PRINT N'Creating [dbo].[spGetSeasonsByGameId]...';


GO
CREATE PROCEDURE [dbo].[spGetSeasonsByGameId]
	@gameDetailsId int
AS

	SELECT * FROM [Season] WHERE [GameDetailId] = @gameDetailsId
RETURN 0
GO
PRINT N'Creating [dbo].[spInsertSeason]...';


GO
CREATE PROCEDURE [dbo].[spInsertSeason]
	@id int OUTPUT,
	@gameDetailsId int ,
	@startYear int,
	@completed bit = 0
AS
	DECLARE @result int

	INSERT INTO [Season] ([GameDetailId], [StartYear], [Completed])
	VALUES (@gameDetailsId, @startYear, @completed)

	SELECT @id = SCOPE_IDENTITY()

	IF @@ERROR = 0 
     SET @result  = 1
  ELSE SET @result = 0

RETURN @result
GO
PRINT N'Creating [dbo].[spUpdateSeason]...';


GO
CREATE PROCEDURE [dbo].[spUpdateSeason]
	@id int,
	@gameDetailsId int,
	@startYear int,
	@completed bit
AS
	UPDATE [Season]
	SET [GameDetailId] = @gameDetailsId,
		[StartYear] = @startYear,
		[Completed] = @completed
	WHERE [Id] = @id
RETURN 0
GO
PRINT N'Update complete.';


GO
